@q equal_temperament.web @>
@q Created by Laurence D. Finston (LDF) Tue 19 Jul 2022 12:38:58 AM CEST@>

@q * (1) Copyright and License.@>

@q Copyright 2022 Laurence D. Finston @>

@q This file is part of Scale_Layouts, a package for generating scale layouts. @>

@q Scale_Layouts is free software; you can redistribute it and/or modify @>
@q it under the terms of the GNU General Public License as published by @>
@q the Free Software Foundation; either version 3 of the License, or @>
@q (at your option) any later version.  @>

@q Scale_Layouts is distributed in the hope that it will be useful, @>
@q but WITHOUT ANY WARRANTY; without even the implied warranty of @>
@q MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the @>
@q GNU General Public License for more details.  @>

@q You should have received a copy of the GNU General Public License @>
@q along with GNU 3DLDF; if not, write to the Free Software @>
@q Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA@>

@q ("@@" stands for a single at-sign in the following paragraph.) @>

@q Please send bug reports to Laurence.Finston@@gmx.de@>

@q The author can be contacted at: @>

@q Laurence D. Finston                 @>
@q Laurence.Finston@@gmx.de (@@ stands for a single "at" sign.)@>


@q * (1) @>
@
@<Include files@>=
#include <stdlib.h>
#include <cstdio>
#include <float.h>
#include <iomanip>
#include <ios>
#include <iostream>
#include <iterator>
#include <math.h>
#include <new>
#include <sstream>
#include <vector>
#include <string>
#include <limits.h>
#include <limits>
#include <cfloat>

using namespace std;

@
@<|equal_temperament| declaration@>=
int
equal_temperament(float scale_length = 65, int fret_ctr = 19);

@
@<|equal_temperament| definition@>=
int
equal_temperament(float scale_length, int fret_ctr)
{
   printf("Entering `equal_temperament'.\n");

   cerr << "scale_length == " << scale_length << endl;
   cerr << "fret_ctr     == " << fret_ctr << endl;


   float alpha = powf(2.0, 1.0F/12.0F);

   cerr << "alpha == " << alpha << endl;

   float a = 1.0F/alpha;

   cerr << "a == " << a << endl;

   float n[200];

   for (int i = 0; i < 100; ++i)
      n[i] = 0.0F;

   n[1]   = scale_length * a; 
   n[101] = scale_length - n[1];

   cerr << setprecision(32) 
        << "n[1]          == " << n[1] << endl
        << "n[101]        ==  " << n[101] << endl
        << "n[1] + n[101] == " << n[1] + n[101] << endl;

   string s;
   s = "  ";

   for (int i = 2; i <= fret_ctr; ++i)
   {
      n[i] = n[i-1] * a;
      n[100+i] = n[i-1] - n[i];
      cerr << "n[" << i << "] " << s << "== " << n[i] << endl
           << "n[" << (100+i) << "] ==  " << n[100+i] << endl;
  
      if (i == 9)
         s = " ";
   }


cerr << "XXX Enter <RETURN> to continue: ";
getchar(); 


   printf("Exiting `equal_temperament' successfully with return value 0.\n");

   
   return 0;

} /* End of |equal_temperament| definition.  */

@
@c
@<Include files@>@;
@<|equal_temperament| definition@>@;

@ 
@(equal_temperament.hxx@>=
@<|equal_temperament| declaration@>@;

@q * Emacs-Lisp code for use in indirect buffers when using the          @>
@q   GNU Emacs editor.  The local variable list is not evaluated when an @>
@q   indirect buffer is visited, so it's necessary to evaluate the       @>
@q   following s-expression in order to use the facilities normally      @>
@q   accessed via the local variables list.                              @>
@q   \initials{LDF 2004.02.12}.                                          @>
@q   (progn (cweb-mode) (outline-minor-mode t))                          @>

@q * Local variables for Emacs.@>
@q Local Variables: @>
@q mode:CWEB @>
@q eval:(display-time) @>
@q eval:(read-abbrev-file) @>
@q indent-tabs-mode:nil @>
@q eval:(outline-minor-mode) @>
@q fill-column:80 @>
@q End: @>

